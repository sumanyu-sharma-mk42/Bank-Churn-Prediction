# -*- coding: utf-8 -*-
"""bank_churn.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XZlHttgHnxCnf6IvadP4--JqL9VSsSdY
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import warnings
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score, confusion_matrix
from sklearn.ensemble import RandomForestClassifier

# %matplotlib inline
warnings.filterwarnings('ignore')

import pandas as pd
df = pd.read_csv("/content/Bank Customer Churn Prediction.csv")
df.info()

df.drop(["customer_id"],axis=1,inplace=True)
df.columns

df['country'] = df['country'].map({'France': 0, 'Spain' : 1,'Germany':2})
df['gender'] = df['gender'].map({'Male': 0, 'Female' : 1})
df['balance']=df['balance'].astype(int)
df['estimated_salary']=df['estimated_salary'].astype(int)

x=df.drop(columns='churn')
y=df['churn']
x_train,x_test,y_train,y_test = train_test_split(x,y,random_state=42,test_size=0.2)


# Initialize StandardScaler
sc = StandardScaler()
x_train_rescaled = sc.fit_transform(x_train)
x_test_rescaled = sc.transform(x_test)

# Initialize RandomForestClassifier
classifier = RandomForestClassifier(n_estimators=100, random_state=32)
classifier.fit(x_train_rescaled, y_train)

# Predict on the test set
y_pred = classifier.predict(x_test_rescaled)

# Calculate and print accuracy
print("Accuracy:", accuracy_score(y_test, y_pred) * 100)

# Print confusion matrix
print("Confusion Matrix:")
print(confusion_matrix(y_test, y_pred))

import pickle

filename = 'bank_churn_model.sav'

pickle.dump(classifier,open(filename,'wb'))

model = pickle.load(open(filename,'rb'))
model.score(x_test_rescaled,y_test)